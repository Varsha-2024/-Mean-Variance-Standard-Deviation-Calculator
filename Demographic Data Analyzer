import pandas as pd

def calculate_demographic_data():
    # Read data from CSV file
    df = pd.read_csv('adult.data.csv', header=None)
    
    # Assign column names
    column_names = [
        'age', 'workclass', 'fnlwgt', 'education', 'education-num',
        'marital-status', 'occupation', 'relationship', 'race', 'sex',
        'capital-gain', 'capital-loss', 'hours-per-week', 'native-country', 'salary'
    ]
    df.columns = column_names
    
    # 1. Race count
    race_count = df['race'].value_counts()
    
    # 2. Average age of men
    average_age_men = round(df[df['sex'] == 'Male']['age'].mean(), 1)
    
    # 3. Percentage with Bachelors degrees
    percentage_bachelors = round((df['education'] == 'Bachelors').mean() * 100, 1)
    
    # 4. Advanced education filter
    advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    
    # 5. Percentage with higher education that earn >50K
    higher_education_rich = round(
        (df[advanced_education & (df['salary'] == '>50K')].shape[0] / 
         df[advanced_education].shape[0]) * 100, 1
    )
    
    # 6. Percentage without higher education that earn >50K
    lower_education_rich = round(
        (df[~advanced_education & (df['salary'] == '>50K')].shape[0] / 
         df[~advanced_education].shape[0]) * 100, 1
    )
    
    # 7. Minimum work hours
    min_work_hours = df['hours-per-week'].min()
    
    # 8. Percentage of rich among those who work fewest hours
    num_min_workers = df[df['hours-per-week'] == min_work_hours]
    rich_percentage = round(
        (num_min_workers[num_min_workers['salary'] == '>50K'].shape[0] / 
         num_min_workers.shape[0]) * 100, 1
    )
    
    # 9. Country with highest percentage of rich
    country_rich_pct = (
        df[df['salary'] == '>50K']['native-country']
        .value_counts() / df['native-country'].value_counts()
    ) * 100
    highest_earning_country = country_rich_pct.idxmax()
    highest_earning_country_percentage = round(country_rich_pct.max(), 1)
    
    # 10. Top occupation in India for those earning >50K
    india_rich = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]
    top_IN_occupation = india_rich['occupation'].value_counts().idxmax()
    
    # Return dictionary with all calculated values
    return {
        'race count': race_count,
        'average age of men': average_age_men,
        'percentage with Bachelors degrees': percentage_bachelors,
        'percentage with higher education that earn >50K': higher_education_rich,
        'percentage without higher education that earn >50K': lower_education_rich,
        'min work hours': min_work_hours,
        'percentage of rich among those who work fewest hours': rich_percentage,
        'country with highest percentage of rich': highest_earning_country,
        'highest percentage': highest_earning_country_percentage,
        'top occupations in India': top_IN_occupation
    }
